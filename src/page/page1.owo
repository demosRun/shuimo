<template lang="pug">
.page-1
  #container
</template>

<script>
  var renderer = null
  var scene = null
  var camera = null
  const infoData = [
    {
      name: '94fe0af37871ce44de8395a18aeb5fb0',
      fileName: '@|90.png|',
      width: 1488,
      height: 806,
      opacity: 100,
      left: 10850,
      top: 3192,
      index: 2
    },
    {
      name: '图层 28 拷贝',
      fileName: '@|502.png|',
      width: 19978,
      height: 2671,
      opacity: 65,
      left: 4719,
      top: 2601,
      index: 4
    },
    {
      name: '山1',
      fileName: '@|187.png|',
      width: 3203,
      height: 1969,
      opacity: 100,
      left: 9495,
      top: 1928,
      index: 3
    },
    {
      name: '山2',
      fileName: '@|205.png|',
      width: 3793,
      height: 1974,
      opacity: 100,
      left: 12076,
      top: 1945,
      index: 6
    },
    {
      name: '高铁',
      fileName: '@|198.png|',
      width: 4371,
      height: 267,
      opacity: 100,
      left: 8496,
      top: 2681,
      index: 10
    },
    {
      name: '桥',
      fileName: '@|219.png|',
      width: 8664,
      height: 545,
      opacity: 100,
      left: 8317,
      top: 2928,
      index: 10
    },
    {
      name: '图层 87',
      fileName: '@|251.png|',
      width: 14855,
      height: 2370,
      opacity: 100,
      left: 6246,
      top: 2604,
      index: 14
    },
    {
      name: '山4',
      fileName: '@|224.png|',
      width: 4392,
      height: 2016,
      opacity: 100,
      left: 6827,
      top: 1103,
      index: 16
    },
    {
      name: '山3',
      fileName: '@|201.png|',
      width: 3685,
      height: 2117,
      opacity: 100,
      left: 10647,
      top: 975,
      index: 18
    }
  ]
  module.exports = {
    data: {
    },
    created: function () {
      this.init()
    },
    init: function () {
      var container = document.getElementById('container');
      // 设立相机
      camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );
      camera.position.set(120, -20, 100)
      camera.lookAt(120, -20, 0)
      // 建立一个场景
      scene = new THREE.Scene();
      // 像素级的渲染，渲染效果更好
      renderer = new THREE.WebGLRenderer({
        antialias: true,
        depthTest: false
      });
      renderer.setClearColor(0xf6f8ef, 1.0);
      renderer.setPixelRatio( window.devicePixelRatio );
      renderer.setSize( window.innerWidth, window.innerHeight );
      container.appendChild( renderer.domElement );

      // renderer.outputEncoding = THREE.sRGBEncoding;
      // renderer.toneMapping = THREE.ACESFilmicToneMapping;

      var pmremGenerator = new THREE.PMREMGenerator( renderer );
      // pmremGenerator.compileEquirectangularShader();

      window.addEventListener( 'resize', this.onWindowResize, false );

      renderer.setAnimationLoop( render );
      // renderer.sortObjects = true;
      // 添加光线
      // var ambientLight = new THREE.AmbientLight(0xffffff);
      // scene.add(ambientLight);
      // var pointLight = new THREE.PointLight("#ffffff");
      // pointLight.position.set(0,10,0);
      // scene.add(pointLight);
      // 添加控制器
      // controls = new THREE.OrbitControls( camera, container );
      // controls.target.set( 0, 0.5, 0 );
      // controls.update();
      this.creatMode()
      function render() {
				renderer.render( scene, camera );
      }
      
      // 播放动画
      setTimeout(() => {
        this.play()
      }, 100);
    },
    creatMode: function () {
      // 辅助参考线
      // var grid = new THREE.GridHelper(500, 100);
      // grid.rotation.x = 90 / 180 * Math.PI
      // scene.add(grid);
      // console.log(infoData)
      infoData.forEach(element => {
        new THREE.TextureLoader().load(element.fileName, (texture) => {
          const obgW = element.width / 100
          const obgH = element.height / 100
          const objL = element.left / 100
          const objT = element.top / 100
          console.log(element.name)
          texture.minFilter = THREE.LinearFilter;
          // MeshBasicMaterial SpriteMaterial
          var textObj = new THREE.MeshBasicMaterial({
            map: texture,
            opacity: 1,
            transparent: true,
            color: 0xffffff,
            depthTest: false,
            sizeAttenuation: false
          });
          var logo = new THREE.Sprite(textObj);
          logo.scale.set(element.width / 100, element.height / 100, 0.01);
          logo.name = element.name
          logo.updateMatrix();
          
          logo.position.set(objL + (obgW / 2), -objT - (obgH / 2), -2 * element.index);
          scene.add(logo);
        })
      });
    },
    play: function () {
      // 设置动画前各元素的位置
      const gaotie = scene.getObjectByName('高铁')
      // gaotie.position.x = 160
      // gaotie.opacity = 0
      var tl = new TimelineMax({
      });
      // 火车驶过
      tl.to(camera.position, 2, {x: 112, y: -35, z: 10 }, 2)
        .to(gaotie.position, 4, {x: 160}, 7.2)
        // .to(camera.position, 1.6, {x: 90, y: -30, z: -10}, 4)
        .to(camera.position , 4, {x: 90, y: -30, z: -10}, 4)
        .to(camera.position , 6, {x: 160, y: -30}, 7.2)
        .to(camera.position , 6, {x: 160, y: -30, z: 60}, 8.4)
    },
    onWindowResize: function () {
      camera.aspect = window.innerWidth / window.innerHeight;
      camera.updateProjectionMatrix();
      renderer.setSize( window.innerWidth, window.innerHeight );
    }
  }
</script>


<style lang="less">

</style>